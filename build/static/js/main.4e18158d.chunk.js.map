{"version":3,"sources":["services/api.js","pages/login/Login.js","components/nav-top/back-button/BackButton.js","components/nav-top/NavTop.js","components/os-card/OsCard.js","pages/dashboard/Dashboard.js","components/scroll-view/ScrollView.js","components/steps/StepComplete.js","components/steps/StepPercentage.js","components/steps/StepService.js","components/steps/StepEnd.js","pages/end-order/EndOrder.js","pages/service-order/ServiceOrder.js","pages/material/Material.js","components/routes/PrivateRoute.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","jwt","require","withStyles","input","margin","paper","padding","button","marginTop","marginBottom","title","color","classes","useState","login","setLogin","userPassword","setUserPassword","history","useHistory","localStorage","getItem","push","event","a","preventDefault","data","post","response","token","isAdmin","decode","userId","name","console","log","setItem","className","Grid","container","direction","justify","alignItems","Typography","variant","noValidate","autoComplete","onSubmit","Paper","elevation","TextField","label","onChange","e","target","value","type","Button","size","disableElevation","BackButton","ArrowBack","to","styles","makeStyles","theme","toolBar","display","justifyContent","NavTop","props","React","open","state","setState","toggleDrawer","key","AppBar","position","Toolbar","backButton","IconButton","edge","aria-label","onClick","Drawer","anchor","onClose","removeItem","cardHeader","flexDirection","cardActions","marginLeft","card","inProgress","complete","OsCard","status","description","date","serviceOrder","id","Card","CardContent","CardActions","ArrowRightAlt","paddingBottom","navTab","bottom","width","headingFive","top","left","setValue","orders","setOrders","setStatus","handleClick","stat","useEffect","get","headers","error","loadOrders","window","scrollTo","behavior","options","year","month","day","hour12","timeZone","listItems","map","order","clientName","service","Intl","DateTimeFormat","format","serviceDate","Container","List","length","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","Assignment","AssignmentLate","AssignmentTurnedIn","ScrollView","children","height","srollView","overflowY","paddingRight","StepComplete","currentStep","Dialog","DialogTitle","prev","next","StepPercentage","setOpen","placeholder","StepService","multiline","StepEnd","EndOrder","time","useParams","setCurrentStep","percentage","setPercentage","serviceCompleted","setServiceCompleted","observation","setObservation","endData","put","handleNext","step","handlePrev","ServiceOrder","useStopwatch","seconds","minutes","hours","start","pause","cars","setCars","starts","setStarts","paused","setPaused","setOrder","resume","setResume","text","setButton","timeSeconds","timeMinutes","timeHours","timer","setTimer","slice","createResume","orderId","getResumes","resumes","handlePause","orderData","loadCars","listCars","car","carId","carName","carNumber","listResume","resum","created_at","endOrder","useCallback","phoneNumber","city","uf","adress","district","href","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","paddin","g","distance","disabled","Material","materials","setMaterials","material","setMaterial","productSelected","setProductSelected","setUserName","setMaterialQt","setTimeout","listMaterials","product","ListItem","productName","ListItemText","primary","handleClose","style","aria-labelledby","DialogContent","DialogContentText","autoFocus","fullWidth","DialogActions","PrivateRoute","Component","component","rest","render","Routes","exact","path","Dashboard","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4e18158d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://apposvoltecrs-com.umbler.net/',\r\n})\r\nexport default api;\r\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  Grid, TextField, Button, Paper, Typography,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../services/api';\n\nconst jwt = require('jsonwebtoken');\n\nfunction Login({ classes }) {\n  const [login, setLogin] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  const history = useHistory();\n\n  const token = localStorage.getItem('token');\n\n\n  if (token) {\n    history.push('/dashboard');\n    return null;\n  }\n\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    const data = {\n      login,\n      userPassword,\n    };\n\n    try {\n      const response = await api.post('login', data);\n\n      const { token, isAdmin } = response.data;\n\n      const { userId, name } = jwt.decode(token);\n\n      console.log(userId);\n\n      localStorage.setItem('name', name);\n      localStorage.setItem('userId', userId);\n      localStorage.setItem('token', token);\n      localStorage.setItem('isAdmin', isAdmin);\n\n      if (token) {\n        history.push('/dashboard');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  return (\n    <div className=\"loginContainer\">\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h2\" className={classes.title}>Entrar</Typography>\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={handleSubmit}\n        >\n          <Paper elevation={3} className={classes.paper}>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <TextField\n                className={classes.input}\n                label=\"Login\"\n                onChange={(e) => setLogin(e.target.value)}\n              />\n              <TextField\n                className={classes.input}\n                label=\"Senha\"\n                type=\"password\"\n                onChange={(e) => setUserPassword(e.target.value)}\n              />\n              <Button\n                className={classes.button}\n                size=\"large\"\n                variant=\"outlined\"\n                color=\"primary\"\n                disableElevation\n                type=\"submit\"\n              >\n                <span>Entrar</span>\n              </Button>\n            </Grid>\n          </Paper>\n        </form>\n      </Grid>\n    </div>\n  );\n}\n\nconst styles = () => ({\n  input: {\n    margin: '1rem',\n  },\n  paper: {\n    padding: 25,\n  },\n  button: {\n    marginTop: '1.5rem',\n    marginBottom: '1rem',\n    padding: '0 2rem 0 2rem',\n  },\n  title: {\n    marginBottom: '4rem',\n    color: '#ffffff',\n  },\n});\n\nexport default withStyles(styles)(Login);\n","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport { ArrowBack } from '@material-ui/icons';\nimport { Link } from \"react-router-dom\";\n\nconst BackButton = () => {\n    return (\n        <div>\n            <Button color=\"inherit\" ><ArrowBack/><Link to=\"/dashboard\"> Voltar</Link></Button>\n        </div>\n    )\n}\n\n\nexport default BackButton\n","import React from 'react'\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, Drawer } from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport BackButton from './back-button/BackButton';\nimport { useHistory } from \"react-router-dom\";\n\nimport './NavTop.css'\n\nconst NavTop = (props) => {\n\n    const [state, setState] = React.useState({\n        open: false\n    });\n\n    const history = useHistory()\n\n    const classes = styles();\n\n    const toggleDrawer = (open) => event => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setState({ ...state, open: open });\n    }\n\n\n    function logOut() {\n        localStorage.removeItem('token')\n        localStorage.removeItem('isAdmin')\n        localStorage.removeItem('name');\n        localStorage.removeItem('userId');\n\n        history.push('/')\n    }\n\n    return (\n        <>\n            <AppBar position=\"sticky\">\n                <Toolbar className={classes.toolBar}>\n                    {\n                        props.backButton === true && <BackButton/>\n                    }\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        {props.title}\n                    </Typography>\n                    \n                    <IconButton \n                        edge=\"start\" \n                        color=\"inherit\" \n                        aria-label=\"menu\"\n                        onClick={toggleDrawer(true)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                </Toolbar>\n            </AppBar>\n\n            <Drawer anchor=\"right\" open={state.open} onClose={toggleDrawer(false)}>\n                <div className=\"side-menu\">\n                    <Typography onClick={logOut} variant=\"h6\">Sair</Typography>\n                </div>\n            </Drawer>\n        </>\n    )\n}\n\nconst styles = makeStyles(theme => ({\n    toolBar: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n}));\n\n\nexport default NavTop\n","import React from 'react'\nimport { Card, CardContent, CardActions, Typography, makeStyles, Button } from '@material-ui/core'\nimport {ArrowRightAlt} from '@material-ui/icons';\nimport { Link } from \"react-router-dom\";\n\nconst OsCard = ({status, type, name, description, date, serviceOrder, id}) => {\n\n    const classes = styles();\n\n    return (\n        <div className={classes.card}>\n            <Card>\n                <CardContent>\n                    <div className={classes.cardHeader}>\n                        <Typography variant=\"h6\">{serviceOrder}</Typography>\n                        {\n                            status === \"complete\" && \n                                <Typography \n                                    variant=\"subtitle1\"\n                                    className={classes.complete}\n                                >\n                                    Concluído\n                                </Typography> \n                        }\n                        {\n                            status === \"inprogress\" && \n                                <Typography \n                                    variant=\"subtitle1\"\n                                    className={classes.inProgress}\n                                >\n                                    Em Andamento\n                                </Typography>\n                        }\n                        {\n                            status === \"active\" && \n                                <Typography \n                                    variant=\"subtitle1\"\n                                    className={classes.complete}\n                                >\n                                    Ativa\n                                </Typography>\n                        }\n                        {\n                            type === 1 && <Typography variant=\"h6\">Obra</Typography>\n                        }\n                        {\n                            type === 2 && <Typography variant=\"h6\">Defeito</Typography>\n                        }\n                        {\n                            type === 3 && <Typography variant=\"h6\">Contrução</Typography>\n                        }\n                        \n                    </div>\n                    <Typography variant=\"subtitle1\">{name}</Typography>\n                    <Typography variant=\"subtitle2\">{description}</Typography>\n                    <Typography variant=\"caption\" color=\"textSecondary\">{date}</Typography>\n                </CardContent>\n                <CardActions>\n                    <div className={classes.cardActions}>\n                        <Button color=\"primary\">\n                            <Link to={`/order/${id}`}>Abrir ordem</Link>\n                            <ArrowRightAlt/>\n                        </Button>\n                    </div>\n                </CardActions>\n            </Card>\n        </div>\n    )\n}\n\nconst styles = makeStyles({\n    cardHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n    },\n    cardActions: {\n        marginLeft: 'auto'\n    },\n    card: {\n        marginTop: '1rem',\n        marginBottom: '1rem'\n    },\n    inProgress: {\n        color: 'red',\n    },\n    complete: {\n        color: 'green'\n    }\n});\n\n\nexport default OsCard\n","/* eslint-disable no-console */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable implicit-arrow-linebreak */\nimport React, { useState, useEffect } from 'react';\nimport { Assignment, AssignmentTurnedIn, AssignmentLate } from '@material-ui/icons';\nimport {\n  Grid, Container, List, BottomNavigation, BottomNavigationAction, withStyles, Typography,\n} from '@material-ui/core';\nimport NavTop from '../../components/nav-top/NavTop';\nimport OsCard from '../../components/os-card/OsCard';\nimport api from '../../services/api';\n\n\nfunction Dashboard({ classes }) {\n  const token = localStorage.getItem('token');\n\n  const [value, setValue] = useState(0);\n  const [orders, setOrders] = useState([]);\n  const [status, setStatus] = useState('active');\n\n  const userId = localStorage.getItem('userId');\n\n\n  useEffect(() => {\n    async function loadOrders() {\n      try {\n        const response = await api.get(`orders/${userId}/${status}`, {\n          headers: {\n            'x-access-token': token,\n          },\n        });\n\n        setOrders(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    loadOrders();\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  }, [status, token]);\n\n\n  function handleClick(stat) {\n    setStatus(stat);\n  }\n\n  const options = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour12: false,\n    timeZone: 'America/Sao_Paulo',\n  };\n\n  const listItems = orders.map((order) => (\n    <li key={order.id}>\n      <OsCard\n        status={order.status}\n        type={order.type}\n        serviceOrder={order.serviceOrder}\n        name={order.clientName}\n        description={order.service}\n        id={order.id}\n        date={new Intl.DateTimeFormat('pt-BR', options).format(order.serviceDate)}\n      />\n    </li>\n  ));\n\n  return (\n    <>\n      <NavTop title=\"Ordens de serviço\" />\n      <Container className={classes.container}>\n        <Grid>\n          <List>\n            {orders.length ? listItems : <Typography className={classes.headingFive} variant=\"h5\">Nenhuma Ordem!</Typography>}\n          </List>\n        </Grid>\n      </Container>\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        showLabels\n        className={classes.navTab}\n      >\n        <BottomNavigationAction label=\"Ordens Ativas\" icon={<Assignment />} onClick={() => handleClick('active')} />\n        <BottomNavigationAction label=\"Em Andamento\" icon={<AssignmentLate />} onClick={() => handleClick('inprogress')} />\n        <BottomNavigationAction label=\"Concluídas\" icon={<AssignmentTurnedIn />} onClick={() => handleClick('complete')} />\n\n      </BottomNavigation>\n    </>\n  );\n}\n\nconst styles = {\n  container: {\n    paddingBottom: '3rem',\n  },\n  navTab: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100vw',\n  },\n  headingFive: {\n    position: 'absolute',\n    top: '30vh',\n    left: '30vw',\n  },\n};\n\nexport default withStyles(styles)(Dashboard);\n","import React from 'react'\n\nimport './ScrollView.css'\nimport { makeStyles } from '@material-ui/core'\n\nconst ScrollView = ({children, height, padding}) => {\n\n    const styles = makeStyles({\n        srollView: {\n            overflowY: 'scroll',\n            height: `${height}vh`,\n            paddingRight: `${padding}rem`\n        }\n    })\n\n    const classes = styles()\n\n    return (\n        <div className={classes.srollView}>\n            {children}\n        </div>\n    )\n}\n\n\n\n\nexport default ScrollView\n","import React from 'react'\nimport { Dialog, DialogTitle, Button } from '@material-ui/core';\n\n\n\nconst StepComplete = (props) => {\n\n\n\n    if (props.currentStep !== 1) {\n        return null\n    }\n\n    return (\n        <div>\n            <Dialog open>\n                <div className=\"step-container\">\n                    <DialogTitle>Concluido?</DialogTitle>\n                    <div className=\"step-buttons\">\n                        <Button variant=\"contained\" className=\"step-button\" color=\"secondary\" disableElevation onClick={props.prev}>Não</Button>\n                        <Button variant=\"contained\" className=\"step-button\" color=\"primary\" disableElevation onClick={props.next}>Sim</Button>\n                    </div>\n                </div>\n            </Dialog>\n        </div>\n    )\n\n    \n}\n\nexport default StepComplete;","import React, { useState } from 'react'\nimport { Dialog, DialogTitle, Button, TextField } from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\n\nconst StepPercentage = (props) => {\n\n    const  [open, setOpen ] = useState(true)\n\n    if (props.currentStep !== 'percentageStep') {\n        return null\n    }\n\n    return (\n        <div>\n            <Dialog open={open}>\n                <div className=\"step-container\">\n                    <DialogTitle>Porcentagem</DialogTitle>\n                    <TextField \n                        type=\"number\"\n                        label=\"Porcentagem\"\n                        placeholder=\"%\"\n                        name=\"percent\" \n                        value={props.value} \n                        onChange={props.onChange}\n                    />\n                    <div className=\"step-buttons\">\n                            <Button \n                                variant=\"contained\" \n                                className=\"step-button\" \n                                color=\"secondary\" \n                                disableElevation \n                                onClick={() => setOpen(false)}\n                            >\n                                Cancelar\n                            </Button>\n                            <Button \n                                variant=\"contained\" \n                                className=\"step-button\" \n                                color=\"primary\" \n                                disableElevation \n                                onClick={() => setOpen(false)}\n                            >\n                                <Link className=\"links\" to=\"/dashboard\">Finalizar</Link>\n                            </Button>\n                    </div>\n                </div>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default StepPercentage;","import React from 'react'\nimport { Dialog, DialogTitle, Button, TextField } from '@material-ui/core';\n\nconst StepService = (props) => {\n    if (props.currentStep !== 2) {\n        return null\n    }\n    return (\n        <div>\n            <Dialog open>\n                <div className=\"step-container\">\n                    <DialogTitle>Serviço Realizado</DialogTitle>\n                    <TextField \n                        multiline={true}\n                        label=\"Serviço Realizado\"\n                        name=\"service\" \n                        value={props.value} \n                        onChange={props.onChange}\n                    />\n                    <div className=\"step-buttons\">\n                        <Button \n                            variant=\"contained\" \n                            className=\"step-button\" \n                            color=\"secondary\" \n                            disableElevation \n                            onClick={props.prev}\n                        >\n                            Voltar\n                        </Button>\n                        <Button \n                            variant=\"contained\" \n                            className=\"step-button\" \n                            color=\"primary\" \n                            disableElevation \n                            onClick={props.next}\n                        >\n                            Continuar\n                        </Button>\n                    </div>\n                </div>\n                \n            </Dialog>\n        </div>\n    )\n}\n\nexport default StepService;","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-sequences */\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport {\n  Dialog, DialogTitle, Button, TextField,\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst StepEnd = (props) => {\n  const [open, setOpen] = useState(true);\n\n  if (props.currentStep !== 3) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Dialog open={open}>\n        <div className=\"step-container\">\n          <DialogTitle>Observações</DialogTitle>\n          <TextField\n            label=\"Observações\"\n            name=\"observation\"\n            value={props.value}\n            onChange={props.onChange}\n          />\n          <div className=\"step-buttons\">\n            <Button\n              variant=\"contained\"\n              className=\"step-button\"\n              color=\"secondary\"\n              disableElevation\n              onClick={props.prev}\n            >\n              Voltar\n            </Button>\n            <Button\n              variant=\"contained\"\n              className=\"step-button\"\n              color=\"primary\"\n              disableElevation\n              onClick={() => setOpen(false), props.onClick}\n            >\n              <Link className=\"links\" to=\"/dashboard\">Finalizar</Link>\n            </Button>\n          </div>\n        </div>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default StepEnd;\n","/* eslint-disable no-console */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport StepComplete from '../../components/steps/StepComplete';\nimport StepPercentage from '../../components/steps/StepPercentage';\nimport StepService from '../../components/steps/StepService';\nimport StepEnd from '../../components/steps/StepEnd';\n\nimport '../../components/steps/Steps.css';\nimport api from '../../services/api';\n\n\nconst EndOrder = ({ time }) => {\n  const { id } = useParams();\n  const token = localStorage.getItem('token');\n\n  const [currentStep, setCurrentStep] = useState(1);\n  const [percentage, setPercentage] = useState('');\n  const [serviceCompleted, setServiceCompleted] = useState('');\n  const [observation, setObservation] = useState('');\n\n  async function endOrder() {\n    const endData = {\n      serviceCompleted,\n      observation,\n      time,\n      percentage,\n      status: 'complete',\n    };\n\n    console.log(endData);\n\n    try {\n      await api.put(`order/${id}`, endData, {\n        headers: {\n          'x-access-token': token,\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const handleNext = (step) => {\n    if (step !== 'percentageStep') {\n      setCurrentStep(currentStep >= 2 ? 3 : currentStep + 1);\n    } else {\n      setCurrentStep('percentageStep');\n    }\n  };\n\n  const handlePrev = () => {\n    setCurrentStep(currentStep <= 1 ? 1 : currentStep - 1);\n  };\n\n\n  return (\n    <div>\n      <StepComplete\n        currentStep={currentStep}\n        next={handleNext}\n        prev={() => handleNext('percentageStep')}\n      />\n      <StepPercentage\n        currentStep={currentStep}\n        next={handleNext}\n        value={percentage}\n        onChange={(e) => setPercentage(e.target.value)}\n      />\n\n      <StepService\n        currentStep={currentStep}\n        next={handleNext}\n        prev={handlePrev}\n        value={serviceCompleted}\n        onChange={(e) => setServiceCompleted(e.target.value)}\n      />\n\n      <StepEnd\n        currentStep={currentStep}\n        next={handleNext}\n        prev={handlePrev}\n        value={observation}\n        onChange={(e) => setObservation(e.target.value)}\n        onClick={endOrder}\n      />\n    </div>\n  );\n};\n\nexport default EndOrder;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable no-console */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Typography,\n  Paper,\n  makeStyles,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  List,\n  Button,\n} from '@material-ui/core';\nimport { useStopwatch } from 'react-timer-hook';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport './ServiceOrder.css';\nimport { Link, useParams } from 'react-router-dom';\nimport ScrollView from '../../components/scroll-view/ScrollView';\nimport EndOrder from '../end-order/EndOrder';\nimport NavTop from '../../components/nav-top/NavTop';\nimport api from '../../services/api';\n\nfunction ServiceOrder() {\n  const {\n    seconds,\n    minutes,\n    hours,\n    start,\n    pause,\n  } = useStopwatch();\n\n\n  const [cars, setCars] = useState([]);\n  const [starts, setStarts] = useState(false);\n  const [paused, setPaused] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [order, setOrder] = useState([]);\n  const [resume, setResume] = useState([]);\n  const [button, setButton] = useState({\n    color: 'primary',\n    text: 'Iniciar',\n  });\n  const [timer, setTimer] = useState({\n    timeSeconds: '00',\n    timeMinutes: '00',\n    timeHours: '00',\n  });\n\n\n  useEffect(() => {\n    setTimer({\n      timeSeconds: `0${seconds}`.slice(-2),\n      timeMinutes: `0${minutes}`.slice(-2),\n      timeHours: `0${hours}`.slice(-2),\n    });\n  }, [hours, minutes, seconds]);\n\n  const { id } = useParams();\n\n  const userId = localStorage.getItem('userId');\n\n\n  const token = localStorage.getItem('token');\n\n  async function createResume(type) {\n    const data = {\n      userId,\n      orderId: id,\n      type,\n      start: starts,\n    };\n\n\n    try {\n      await api.post('resume', data, {\n        headers: {\n          'x-access-token': token,\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getResumes() {\n    const resumes = await api.get(`resume/${id}`, {\n      headers: {\n        'x-access-token': token,\n      },\n    });\n    setResume(resumes.data);\n  }\n\n  useEffect(() => {\n    async function orderData() {\n      try {\n        const response = await api.get(`order/${id}`, {\n          headers: {\n            'x-access-token': token,\n          },\n        });\n        setOrder(response.data);\n\n        if (response.data.status === 'inprogress') {\n          setStarts(true);\n          setButton({\n            color: 'secondary',\n            text: 'Finalizar',\n          });\n          setPaused(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    orderData();\n  }, []);\n\n  useEffect(() => {\n    async function loadCars() {\n      try {\n        const response = await api.get(`cars/${order.serviceOrder}/${userId}`, {\n          headers: {\n            'x-access-token': token,\n          },\n        });\n\n        setCars(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    loadCars();\n  }, [order.serviceOrder, token, userId]);\n\n  function handlePause() {\n    if (paused === false) {\n      createResume(2);\n      setPaused(true);\n      getResumes();\n      pause();\n    } else {\n      createResume(1);\n      setPaused(false);\n      getResumes();\n      start();\n    }\n  }\n\n  // eslint-disable-next-line no-use-before-define\n  const classes = styles();\n\n  const listCars = cars.map((car) => (\n    <Typography key={car.carId} variant=\"subtitle1\">\n      {car.carName}\n      {' '}\n      -\n      {' '}\n      {car.carNumber}\n    </Typography>\n  ));\n\n\n  const listResume = resume.map((resum) => (\n    <Typography key={resum.id}>\n      {resum.type === 1 ? 'Entrada' : 'Saída'}\n      {' '}\n      -\n      {' '}\n      {resum.created_at}\n    </Typography>\n  ));\n\n  const endOrder = useCallback(() => {\n    setOpen(true);\n    console.log(starts);\n  }, []);\n\n  function handleStart() {\n    if (!starts) {\n      setStarts(true);\n      setPaused(false);\n      setButton({\n        color: 'secondary',\n        text: 'Finalizar',\n      });\n      start();\n      createResume(1);\n    } else {\n      endOrder();\n    }\n  }\n\n  return (\n    <>\n      <NavTop backButton />\n      <Paper className={classes.cardHeader}>\n        <div className=\"card-header\">\n          <Typography variant>\n            Pedido:\n            {order.order}\n          </Typography>\n          <Typography>\n            OS:\n            {order.serviceOrder}\n          </Typography>\n        </div>\n        <div className=\"card-content\">\n          <Typography variant=\"h5\">{order.clientName}</Typography>\n          <Typography variant=\"h6\">{order.phoneNumber}</Typography>\n          <Typography>\n            {order.city}\n            {' '}\n            -\n            {' '}\n            {order.uf}\n          </Typography>\n          <Typography variant=\"body2\">\n            {order.adress}\n            ,\n            {' '}\n            {order.district}\n          </Typography>\n          <Button color=\"primary\" href=\"https://waze.com/ul?ll=-29.7023078,-51.1271811&z=10&navigate=yes\">\n            Abrir no Waze\n          </Button>\n        </div>\n      </Paper>\n      <div className=\"content-header\" />\n      <div className=\"content\">\n        { starts === true\n                    && (\n                    <>\n                      <div className=\"status-header\">\n                        <Typography>\n                          {timer.timeHours}\n                          :\n                          {timer.timeMinutes}\n                          :\n                          {timer.timeSeconds}\n                        </Typography>\n                      </div>\n                      <div className=\"status-button\">\n                        {\n                                paused !== true\n                                  ? (\n                                    <Button\n                                      variant=\"outlined\"\n                                      color=\"secondary\"\n                                      onClick={() => handlePause()}\n                                    >\n                                      Parar\n                                    </Button>\n                                  )\n                                  : (\n                                    <Button\n                                      variant=\"outlined\"\n                                      color=\"primary\"\n                                      onClick={() => handlePause()}\n                                    >\n                                      Voltar\n                                    </Button>\n                                  )\n                            }\n                      </div>\n                    </>\n                    )}\n        <Typography variant=\"h6\">Serviço Solicitado:</Typography>\n        <Typography variant=\"subtitle1\" className={classes.margin}>{order.service}</Typography>\n        <Typography variant=\"h6\">Descrição:</Typography>\n        <Typography variant=\"subtitle1\" className={classes.margin}>{order.description}</Typography>\n        <Typography variant=\"h6\">Veículos</Typography>\n        {listCars}\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            onClick={getResumes}\n          >\n            <Typography>Resumo</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <List>\n              <ScrollView height=\"20\" paddin g=\"1\">\n                {listResume}\n              </ScrollView>\n            </List>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <div className=\"footer\">\n          {\n          order.status === 'complete' ? (\n            <>\n              <Typography variant=\"h6\">Serviço Realizado:</Typography>\n              <Typography variant=\"subtitle1\" className={classes.margin}>{order.serviceCompleted}</Typography>\n              <Typography variant=\"h6\">Observação:</Typography>\n              <Typography variant=\"subtitle1\" className={classes.margin}>{order.observation}</Typography>\n              <Typography variant=\"h6\">Tempo / Deslocamento</Typography>\n              <Typography variant=\"subtitle1\" className={classes.margin}>\n                Tempo:\n                {' '}\n                {order.time}\n                , Deslocamento:\n                {' '}\n                {order.distance}\n                km\n              </Typography>\n            </>\n          ) : (\n            <>\n              <Button\n                disabled={!paused && starts}\n                disableElevation\n                variant=\"contained\"\n                onClick={handleStart}\n                className={classes.margin}\n                color={button.color}\n                size=\"large\"\n              >\n                {button.text}\n              </Button>\n              <Button\n                disableElevation\n                variant=\"contained\"\n                size=\"large\"\n              >\n                <Link to=\"/solicitar\" className=\"links\">Soliciar Material</Link>\n              </Button>\n              {\n                open === true\n                && <EndOrder time={`${timer.timeHours}:${timer.timeMinutes}:${timer.timeSeconds}`} />\n              }\n            </>\n          )\n          }\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst styles = makeStyles({\n  cardHeader: {\n    margin: '2rem',\n    padding: '1rem',\n    position: 'relative',\n    bottom: '-8rem',\n    marginTop: '-5rem',\n  },\n  margin: {\n    marginBottom: '1.2rem',\n  },\n});\n\nexport default ServiceOrder;\n","/* eslint-disable no-mixed-spaces-and-tabs */\n/* eslint-disable react/jsx-closing-tag-location */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable indent */\n/* eslint-disable no-tabs */\n/* eslint-disable react/jsx-indent-props */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useEffect, useState } from 'react';\nimport {\n  Grid,\n  TextField,\n  List,\n  ListItemText,\n  ListItem, Typography,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n  Button,\n} from '@material-ui/core';\nimport api from '../../services/api';\nimport NavTop from '../../components/nav-top/NavTop';\n\nfunction Material() {\n  const [materials, setMaterials] = useState([]);\n  const [material, setMaterial] = useState('');\n  const [productSelected, setProductSelected] = useState('');\n  const [userName, setUserName] = useState('');\n  const [materialQt, setMaterialQt] = useState('');\n  const [open, setOpen] = useState(false);\n\n  const token = localStorage.getItem('token');\n  const name = localStorage.getItem('name');\n\n  useEffect(() => {\n    function loadMaterials() {\n\t\t\tif (material.length > 0) {\n\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\tconst response = await api.get(`products/${material}`, {\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'x-access-token': token,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tsetMaterials(response.data);\n\t\t\t\t}, 500);\n\t\t\t}\n    }\n    loadMaterials();\n  }, [material, token]);\n\n  const listMaterials = materials.map((product) => (\n    <ListItem\n      button\n      onClick={() => {\n        setOpen(true);\n        setProductSelected(product.productName);\n        setUserName(name);\n      }}\n    >\n      <ListItemText primary={product.productName} key={product.id} />\n    </ListItem>\n\t));\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <NavTop backButton />\n      <div style={{ padding: '1rem' }}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <TextField\n            label=\"Nome do Material\"\n            onChange={(e) => (e.target.value.length ? setMaterial(e.target.value) : setMaterials(['']))}\n          />\n          {\n            materials.length > 1 && (\n              <Typography variant=\"subtitle1\">\n              {\n                materials.length\n              }\n              {' '}\n              produtos encontrados.\n              </Typography>\n            )\n          }\n          <List>\n            {listMaterials}\n          </List>\n        </Grid>\n      </div>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">\n          Solicitar Material,\n          {' '}\n          {name}\n          ?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n             {productSelected}\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Quantidade a solicitar:\"\n            type=\"text\"\n            fullWidth\n            onChange={(e) => setMaterialQt(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"Secondary\">\n            Cancelar\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Solicitar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default Material;\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    \r\n    const token = localStorage.getItem('token')\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => token\r\n                ? <Component {...rest} />\r\n                : <Redirect to=\"/\" />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Login from \"./pages/login/Login\";\nimport Dashboard from \"./pages/dashboard/Dashboard\";\nimport ServiceOrder from \"./pages/service-order/ServiceOrder\";\nimport Material from \"./pages/material/Material\";\nimport PrivateRoute from \"./components/routes/PrivateRoute\";\n\nexport default function Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login/>\n        </Route>\n        <PrivateRoute path=\"/dashboard\" component={Dashboard}/>\n        <PrivateRoute path=\"/order/:id\" component={ServiceOrder}/>\n        <PrivateRoute path=\"/solicitar\" component={Material}/>\n      </Switch>\n    </Router>\n  );\n}","import React from 'react';\nimport 'normalize.css'\nimport './App.css'\nimport Routes from './routes';\n\nfunction App() {\n  return (\n      <Routes/>\n      \n  );\n}\n\nexport default App;\n","/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-use-before-define */\n/* eslint-disable comma-dangle */\n/* eslint-disable operator-linebreak */\n/* eslint-disable arrow-parens */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}